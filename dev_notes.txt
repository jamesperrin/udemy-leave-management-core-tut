Complete ASP.NET Core and Entity Framework Development
Learn ASP.NET Core and Entity Framework by building and publishing a practical Employee Leave Management System.
https://www.udemy.com/course/complete-aspnet-core-31-and-entity-framework-development

Core Leave Management Master
https://github.com/trevoirwilliams/leave-management

SECTION03 - SOURCE CODE
https://github.com/trevoirwilliams/LeaveManagementWeb-Net6/tree/218ac8802a98324250536ec414f71b8317457925

update-database -- Initial Schema

Add Employee class code
add-migration ExtendedUserTable
Remove-Migration

[Column(TypeName = "varchar(256)")]
public string LastName { get; set; }

[Column(TypeName = "datetime2(4)")]
public DateTime DateJoined { get; set; }

add-migration ExtendedUserTable
update-database

SECTION04 - SOURCE CODE
https://github.com/trevoirwilliams/LeaveManagementWeb-Net6/tree/9afba13d1c7954000f98caf8d4dbd09723d989b1

add-migration AddedLeaveTables

migrationBuilder.CreateIndex(
	name: "IX_LeaveTypes_Name",
	table: "LeaveTypes",
	column: "Name");
	
migrationBuilder.AddUniqueConstraint(
	name: "UC_LeaveTypes_Name",
	table: "LeaveTypes",
	column: "Name");
	
b.HasIndex("Name").IsUnique();

update-database

EF CORE SCAFFOLDING
Scaffold-DbContext "Connection String" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models

Scaffold-DbContext "Server=(localdb)\mssqllocaldb2019;Database=LeaveManagementNet6;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models\Entities

dotnet ef dbcontext scaffold "Server=(localdb)\mssqllocaldb2019;Database=LeaveManagementNet6;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -force -OutputDir Models\Entities

dotnet ef dbcontext scaffold "Server=(localdb)\mssqllocaldb2019;Database=LeaveManagementNet6;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models\Entities -force

https://www.learnentityframeworkcore.com/walkthroughs/existing-database

Updating the Model link

The recommended approach to keeping changes to the database in sync with the generated model is to use migrations. However, if you want to re-scaffold the model after making schema changes, you can do so by specifying the -force option e.g.:

dotnet ef dbcontext scaffold "Server=.\;Database=AdventureWorksLT2012;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -force

All of the class files will be overwritten, which means that any amendments that you might have made to them e.g. adding attributes or additional members, will be lost.

Visual Studio link
If you are working with Visual Studio, you can use the Package Manager Console commands to generate the the code files for the model. The equivalent command to the last CLI command just above is:

PM> Scaffold-DbContext "Server=.\;Database=AdventureWorksLT2012;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Model -Context "AdventureContext" -DataAnnotations

The dotnet ef tool is no longer part of the .NET Core SDK
This change allows us to ship dotnet ef as a regular .NET CLI tool that can be installed as either a global or local tool.For example, to be able to manage migrations or scaffold a DbContext, install dotnet ef as a global tool typing the following command:
https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-4/

dotnet tool install --global dotnet-ef


SECTION05 - SOURCE CODE
https://github.com/trevoirwilliams/LeaveManagementWeb-Net6/tree/de60379983683805c76c04726566da6b26c716a5

DATATABLES JS
https://datatables.net/
https://www.bootstrapcdn.com/fontawesome/
https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css

FONT AWESOME
https://fontawesome.com/v4.7.0/icons/

REQUIRED NUGET PACKAGES
Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation
Microsoft.EntityFrameworkCore
Microsoft.EntityFrameworkCore.SqlServer
Microsoft.EntityFrameworkCore.SqlServer.Design
Microsoft.EntityFrameworkCore.Tools
> Microsoft.VisualStudio.Web.CodeGeneration.Design

Microsoft.AspNetCore.Identity.EntityFrameworkCore
Microsoft.AspNetCore.Identity.UI

AutoMapper
AutoMapper.Extensions.Microsoft.DependencyInjection

CONNECTION STRINGS
Data Source=(localdb)\mssqllocaldb2019;Initial Catalog=LeaveManagement;Integrated Security=True;

"ConnectionStrings": {
"DefaultConnection": "Server=(localdb)\\mssqllocaldb2019;Database=LeaveManagementNet6;Trusted_Connection=True;MultipleActiveResultSets=true"
}

Install Packages AutoMapper and AutoMapper.Extensions.Microsoft.DependencyInjection.
Add new AutoMapper MapperConfig file.

Install Datatables.js via CDN
Using Libmon installed jQuery, Bootstrap, jquery-validate, jquery-validation-unobtrusive, Sweetalert, and Font-Awesome.



SECTION06 - SOURCE CODE
https://github.com/trevoirwilliams/LeaveManagementWeb-Net6/tree/aab083a45f9ef9fc22ee3546267f96f029fa4477


SECTION07 - SOURCE CODE
https://github.com/trevoirwilliams/LeaveManagementWeb-Net6/tree/e1addab7a0c97de5353c3bbd577c0a3cbb26f21f

add-migration AddedDefaultUsersAndRoles
update-database
update-database AddedLeaveTables
remove-migration -- removes last migration
update-database

Papercut SMTP

SECTION08 - SOURCE CODE


SECTION09 - SOURCE CODE






